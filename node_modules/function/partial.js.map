{"version":3,"sources":["../partial.js"],"names":["_argument_count","require","_merge_arguments","_PARTIAL_KEY","module","exports","partial","func","args","TypeError","hasOwnProperty","args_","func_","p","Object","defineProperties","apply","arguments","name","value","test","configurable","length","Math","max"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,kBAAkBC,QAAQ,mBAAR,CAAxB;AACA,IAAMC,mBAAmBD,QAAQ,oBAAR,CAAzB;AACA,IAAME,eAAeF,QAAQ,gBAAR,CAArB;;AAEA;;;AAGAG,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,IAAjB,gBAAgCC,IAAhC,gCAA0D;AAC1E,KAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC/B,QAAM,IAAIE,SAAJ,CAAc,sBAAd,CAAN;AACA;AACD,KAAI,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4BA,SAAS,IAArC,IAA6C,CAACA,KAAKE,cAAL,CACjD,QADiD,CAAlD,EACY;AACX,QAAM,IAAID,SAAJ,CAAc,8BAAd,CAAN;AACA;;AAED,KAAIE,cAAJ;AACA,KAAIC,cAAJ;;AAEA,KAAIL,KAAKG,cAAL,CAAoBP,YAApB,CAAJ,EAAuC;AACtC,MAAMU,IAAIN,KAAKJ,YAAL,CAAV;AACAQ,UAAQT,iBAAiBW,EAAEL,IAAnB,EAAyBA,IAAzB,CAAR;AACAI,UAAQC,EAAEN,IAAV;AACA,EAJD,MAIO;AACNI,UAAQH,IAAR;AACAI,UAAQL,IAAR;AACA;;AAED,QAAOO,OAAOC,gBAAP,CACN,SAAST,OAAT,GAAmB;AAAA,8BACKA,QAAQH,YAAR,CADL;AAAA,MACVK,IADU,yBACVA,IADU;AAAA,MACJD,IADI,yBACJA,IADI;;AAElB,SAAOA,KAAKS,KAAL,CAAW,IAAX,EAAiBd,iBAAiBM,IAAjB,EAAuBS,SAAvB,CAAjB,CAAP;AACA,EAJK;AAMLC,QAAM;AACLC,UAAOZ,KAAKW,IAAL,GACJ,gBAAgBE,IAAhB,CAAqBb,KAAKW,IAA1B,IACCX,KAAKW,IADN,gBAEYX,KAAKW,IAHb,GAIJ,SALE;AAMLG,iBAAc;AANT,GAND;AAcLC,UAAQ;AACPH,UAAOI,KAAKC,GAAL,CAAS,CAAT,EAAYjB,KAAKe,MAAL,GAActB,gBAAgBW,KAAhB,CAA1B,CADA;AAEPU,iBAAc;AAFP;AAdH,IAkBJlB,YAlBI,EAkBW;AACfgB,SAAO;AACNX,SAAMG,KADA;AAENJ,SAAMK;AAFA,GADQ;AAKfS,gBAAc;AALC,EAlBX,EAAP;AA2BA,CAhDD","file":"partial.js","sourcesContent":["// @flow\n\nconst _argument_count = require('./_argument_count')\nconst _merge_arguments = require('./_merge_arguments')\nconst _PARTIAL_KEY = require('./_PARTIAL_KEY')\n\n/**\n * Create a new version of the function where the given arguments are already filled in.\n */\nmodule.exports = function partial(func:Function, args:Array<any>):Function {\n\tif (typeof func !== 'function') {\n\t\tthrow new TypeError('Expected a function.')\n\t}\n\tif (typeof args !== 'object' || args === null || !args.hasOwnProperty(\n\t\t'length')) {\n\t\tthrow new TypeError('Expected an iterable object.')\n\t}\n\n\tlet args_\n\tlet func_\n\n\tif (func.hasOwnProperty(_PARTIAL_KEY)) {\n\t\tconst p = func[_PARTIAL_KEY]\n\t\targs_ = _merge_arguments(p.args, args)\n\t\tfunc_ = p.func\n\t} else {\n\t\targs_ = args\n\t\tfunc_ = func\n\t}\n\n\treturn Object.defineProperties(\n\t\tfunction partial() {\n\t\t\tconst { args, func } = partial[_PARTIAL_KEY]\n\t\t\treturn func.apply(this, _merge_arguments(args, arguments))\n\t\t},\n\t\t{\n\t\t\tname: {\n\t\t\t\tvalue: func.name\n\t\t\t\t\t? /^partial( |$)/.test(func.name)\n\t\t\t\t\t\t? func.name\n\t\t\t\t\t\t: `partial ${func.name}`\n\t\t\t\t\t: 'partial',\n\t\t\t\tconfigurable: true\n\t\t\t},\n\t\t\tlength: {\n\t\t\t\tvalue: Math.max(0, func.length - _argument_count(args_)),\n\t\t\t\tconfigurable: true\n\t\t\t},\n\t\t\t[_PARTIAL_KEY]: {\n\t\t\t\tvalue: {\n\t\t\t\t\targs: args_,\n\t\t\t\t\tfunc: func_\n\t\t\t\t},\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}\n\t)\n}\n"]}